package com.example.stopwatch;

import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.os.Handler;
import android.os.SystemClock;
import android.view.View;
import android.widget.Chronometer;
import android.widget.ImageButton;

public class MainActivity extends AppCompatActivity {
    Chronometer chronometer;
    ImageButton btnStart,btnPause,btnStop;
private boolean isResume;
Handler handler;
Long tMilliSec,tStart,tBuff,tUpdate=0L;
int Sec,Min,MilliSec;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        chronometer= findViewById(R.id.chronometer);
        btnStart= findViewById(R.id.bt_Start);
        btnStop= findViewById(R.id.stop);
        handler = new Handler();


        btnStart.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if(!isResume)
                {
                  tStart= SystemClock.uptimeMillis();
                  handler.postDelayed(runnable,0 );
                  chronometer.start();
                  isResume = true;
                  btnStop.setVisibility(View.GONE);
                  btnStart.setImageDrawable(getResources().getDrawable(
                          R.drawable.ic_pause
                  ));

                }else{

                    tBuff+=tMilliSec;
                    handler.removeCallbacks(runnable);
                    chronometer.stop();
                    isResume = false;
                    btnStop.setVisibility(View.VISIBLE);
                    btnStart.setImageDrawable(getResources().getDrawable(
                            R.drawable.ic_play_arrow


                    ));




                }
            }
        });

btnStop.setOnClickListener(new View.OnClickListener() {
    @Override
    public void onClick(View v) {
        if(!isResume)
        {
            btnStart.setImageDrawable(getResources().getDrawable(

                    R.drawable.ic_play_arrow



            ));
            tMilliSec = 0L;
            tStart = 0L;
            tBuff=0L;
            tUpdate =0L;
            Sec = 0;
            Min=0;
MilliSec=0;

chronometer.setText("00:00:00");


        }
    }
});


    }

    public Runnable runnable = new Runnable() {
        @Override
        public void run() {
tMilliSec = SystemClock.uptimeMillis() - tStart;
tUpdate = tBuff + tMilliSec;
Sec = (int)(tUpdate/1000);
Min = Sec/60;
Sec =Sec%60;
MilliSec = (int) (tUpdate%100);
chronometer.setText(String.format("%02d",Min)+":"
+String.format( "%02d",Sec)+":"+String.format("%02d",MilliSec));
handler.postDelayed(this,60);
        }
    };







}
